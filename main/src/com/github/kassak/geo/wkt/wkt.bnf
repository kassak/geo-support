{
  parserClass = "com.github.kassak.geo.wkt.WktParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  generate=[psi="no" visitor="no"]

  elementTypeHolderClass="com.github.kassak.geo.wkt.WktTypes"
  elementTypeClass="com.github.kassak.geo.wkt.WktElementType"
  tokenTypeClass="com.github.kassak.geo.wkt.WktTokenType"
  parserUtilClass="com.github.kassak.geo.wkt.WktGeneratedParserUtil"

  extends("wkt_.*_geom") = wkt_geometry
  pin("wkt_.*_geom") = 1
  pin(".*_recover") = 0
  consumeTokenMethod(".*_recover") = "fast"

  tokens = [
    LPAREN = "("
    RPAREN = ")"
    LBRACKET = "["
    RBRACKET = "]"
    LBRACE = "{"
    RBRACE = "|"
    COMMA = ","
    DOT = "."
    SEMICOLON = ";"
    MINUS = "-"
    PLUS = "+"
    EQUAL = "="
    NUMBER = "NUMBER"
    SCIENTIFIC = "SCIENTIFIC"
    IDENT = "IDENT"
    STRING = "STRING"
  ]
}

root ::= <<parsePrimitives (emb_srid? wkt_any_geometry)>>

integer ::= NUMBER {name="integer"}
numeric ::= ['+' | '-'] <<parseFloatTerm>> {name="float"}
private unknown_identifier ::= <<parseUnknownIdentifier>>
private attr_list_recover ::= !(')' | ']')
private comma_attr_list_item_recover ::= attr_list_recover !','
meta private attrs_content ::= <<attrs>> {recoverWhile=attr_list_recover}
meta private attrs_inner ::= <<left>> <<attrs_content <<attrs>>>> <<right>> {pin=1}
meta attributes ::=
    <<attrs_inner '(' <<attrs>> ')'>>
  | <<attrs_inner '[' <<attrs>> ']'>>
meta private comma_list ::= <<item>> (',' <<item>>)* {pin(".*")=1}
meta private comma_list_attrs_item ::= <<item>> {recoverWhile=comma_attr_list_item_recover}
meta private comma_list_attrs ::= <<attributes <<comma_list <<comma_list_attrs_item <<item>>>>>>>>

private numeric_2 ::= numeric numeric
private numeric_3 ::= numeric numeric numeric
private numeric_4 ::= numeric numeric numeric numeric

emb_srid ::= SRID '=' NUMBER ';' {pin=1}

//hierarchy
fake wkt_geometry ::=
fake wkt_point ::= {extends=wkt_geometry}
fake wkt_line_string ::= {extends=wkt_geometry}
fake wkt_polygon ::= {extends=wkt_geometry}
fake wkt_polyhedral_surface ::= {extends=wkt_geometry}
fake wkt_triangle ::= {extends=wkt_geometry}
fake wkt_tin ::= {extends=wkt_geometry}
fake wkt_multi_point ::= {extends=wkt_geometry}
fake wkt_multi_line_string ::= {extends=wkt_geometry}
fake wkt_multi_polygon ::= {extends=wkt_geometry}
fake wkt_geometry_collection ::= {extends=wkt_geometry}
fake wkt_wildcard ::= {extends=wkt_geometry}

{
  elementType("wkt_.*(?<!multi)_point") = wkt_point
  elementType("wkt_.*(?<!multi)_line_string") = wkt_line_string
  elementType("wkt_.*(?<!multi)_polygon") = wkt_polygon
  elementType("wkt_.*_polyhedral_surface") = wkt_polyhedral_surface
  elementType("wkt_.*_triangle") = wkt_triangle
  elementType("wkt_.*_tin") = wkt_tin
  elementType("wkt_.*_multi_point") = wkt_multi_point
  elementType("wkt_.*_multi_line_string") = wkt_multi_line_string
  elementType("wkt_.*_multi_polygon") = wkt_multi_polygon
  elementType("wkt_.*_geometry_collection") = wkt_geometry_collection
  elementType("wkt_.*_wildcard") = wkt_wildcard
}

private wkt_any_geometry ::=
    wkt_tagged_geom
  | wkt_tagged_wildcard

private meta with_dim ::=
    ZM <<withDim '"ZM"' <<proceed>>>>
  | Z  <<withDim '"Z"'  <<proceed>>>>
  | M  <<withDim '"M"'  <<proceed>>>>
  |    <<withDim '""'   <<proceed>>>>

private dim_coord ::=
    &<<dimIs "ZM">> numeric_4
  | &<<dimIs "Z">>  numeric_3
  | &<<dimIs "M">>  numeric_3
  | &<<dimIs "">>   numeric_2

private wkt_tagged_geom ::=
    wkt_tagged_point
  | wkt_tagged_line_string
  | wkt_tagged_polygon
  | wkt_tagged_polyhedral_surface
  | wkt_tagged_triangle
  | wkt_tagged_tin
  | wkt_tagged_multi_point
  | wkt_tagged_multi_line_string
  | wkt_tagged_multi_polygon
  | wkt_tagged_geometry_collection

wkt_empty ::= EMPTY {extends=wkt_geometry}
wkt_tagged_point ::= POINT <<with_dim (
    wkt_empty | wkt_point_text
    )>>
wkt_tagged_line_string ::= LINESTRING <<with_dim (
    wkt_empty | wkt_line_string_text
    )>>
wkt_tagged_polygon ::= POLYGON <<with_dim (
    wkt_empty | wkt_polygon_text
    )>>
wkt_tagged_polyhedral_surface ::= POLYHEDRALSURFACE <<with_dim (
    wkt_empty | <<comma_list_attrs wkt_implicit_polygon>>
    )>>
wkt_tagged_triangle ::= TRIANGLE <<with_dim (
    wkt_empty | wkt_polygon_text
    )>>
wkt_tagged_tin ::= TIN <<with_dim (
    wkt_empty | <<comma_list_attrs wkt_implicit_polygon>>
    )>>
wkt_tagged_multi_point ::= MULTIPOINT <<with_dim (
    wkt_empty | <<comma_list_attrs wkt_implicit_point>>
    )>>
wkt_tagged_multi_line_string ::= MULTILINESTRING <<with_dim (
    wkt_empty | wkt_polygon_text
    )>>
wkt_tagged_multi_polygon ::= MULTIPOLYGON <<with_dim (
    wkt_empty | <<comma_list_attrs wkt_implicit_polygon>>
    )>>
wkt_tagged_geometry_collection ::= GEOMETRYCOLLECTION <<with_dim (
    wkt_empty | <<comma_list_attrs wkt_tagged_geom>>
    )>>

wkt_implicit_point_attr ::= dim_coord {elementType=attributes}
wkt_implicit_no_paren_point ::= wkt_implicit_point_attr

private wkt_point_text ::= <<attributes dim_coord>>
wkt_implicit_point ::= wkt_point_text
private wkt_line_string_text ::= <<comma_list_attrs wkt_implicit_no_paren_point>>
wkt_implicit_line_string ::= wkt_line_string_text
private wkt_polygon_text ::= <<comma_list_attrs wkt_implicit_line_string>>
wkt_implicit_polygon ::= wkt_polygon_text

wkt_tagged_wildcard ::= unknown_identifier wkt_wildcard_text {pin=0}
private wkt_wildcard_text ::= <<comma_list_attrs (wildcard_geometry_attr*)>>
wkt_implicit_wildcard ::= wkt_wildcard_text
private wildcard_geometry_attr ::= numeric | STRING | wkt_any_geometry | wkt_implicit_wildcard

